Here is an algorithm competition problem described in MiniZinc. Please provide a correct C++ program for this problem and ensure that the program's complexity is as low as possible. The answer should include only the C++ program. Don't add explanation outside the program. Don't use markdown format. 

int: x1;
int: y1;
int: x2;
int: y2;
int: N;
array[1..N, 1..2] of int: position;
var int: r1s;
var int: r2s;
constraint r1s >= 0 /\ r2s >= 0;
constraint forall(i in 1..N)((pow(position[i, 1]-x1, 2)+pow(position[i, 2]-y1, 2) <= r1s) \/ (pow(position[i, 1]-x2, 2)+pow(position[i, 2]-y2, 2) <= r2s));
solve minimize r1s+r2s;
output[show(r1s+r2s)];
